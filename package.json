{
    "name": "@ijstech/node",
    "description": "Secure Node Server",
    "version": "0.1.1",
    "workspaces": [
        "packages/*"
    ],
    "main": "./lib/index.js",
    "types": "./types/index.d.ts",
    "author": "https://ijs.network",
    "license": "AGPL-3.0",
    "repository": {
        "type": "git",
        "url": "https://github.com/ijstech/node"
    },
    "dependencies": {
        "@ijstech/eth-contract": "git+https://github.com/ijstech/eth-contract",
        "@ijstech/eth-wallet": "git+https://github.com/ijstech/eth-wallet",
        "bignumber.js": "9.0.1",
        "cron-parser": "4.2.0",
        "extract-zip": "2.0.1",
        "graphql": "16.3.0",
        "isolated-vm": "4.4.1",
        "koa": "2.13.0",
        "koa-bodyparser": "4.3.0",
        "mysql": "2.18.1",
        "redis": "3.1.2",
        "web3.storage": "4.4.0"
    },
    "devDependencies": {
        "@types/koa": "2.13.4",
        "@types/mocha": "9.1.1",
        "@types/mysql": "2.15.20",
        "@types/node": "17.0.6",
        "@types/redis": "2.8.32",
        "ganache": "^7.0.3",
        "mocha": "10.0.0",
        "ts-node": "10.9.1",
        "typescript": "4.3.5"
    },
    "overrides": {
        "got": "12.1.0"
    },
    "scripts": {
        "build": "npm run build:modules && npm run build:node && npm run build:examples",
        "build:examples": "npm run build:example:app",
        "build:example:app": "cd examples/app && npm run build && cd ../../",
        "build:modules": "npm run build:module:mime&& npm run build:module:ipfs && npm run build:module:storage && npm run build:module:pdm && npm run build:module:wallet && npm run build:module:tsc && npm run build:module:crypto && npm run build:module:plugin && npm run build:module:cache && npm run build:module:db && npm run build:module:message && npm run build:module:queue && npm run build:module:http && npm run build:module:schedule && npm run build:module:vm && npm run build:module:app && npm run build:module:eth-contract",
        "build:module:app": "cd packages/app && npm run build && cd ../../",
        "build:module:cache": "cd packages/cache && npm run build && cd ../../",
        "build:module:crypto": "cd packages/crypto && npm run build && cd ../../",
        "build:module:db": "cd packages/db && npm run build && cd ../../",
        "build:module:eth-contract": "cd packages/eth-contract && npm run build && cd ../../",
        "build:module:http": "cd packages/http && npm run build && cd ../../",
        "build:module:ipfs": "cd packages/ipfs && npm run build && cd ../../",
        "build:module:message": "cd packages/message && npm run build && cd ../../",
        "build:module:mime": "cd packages/mime && npm run build && cd ../../",
        "build:module:plugin": "cd packages/plugin && npm run build && cd ../../",
        "build:module:pdm": "cd packages/pdm && npm run build && cd ../../",
        "build:module:queue": "cd packages/queue && npm run build && cd ../../",
        "build:module:schedule": "cd packages/schedule && npm run build && cd ../../",
        "build:module:storage": "cd packages/storage && npm run build && cd ../../",
        "build:module:tsc": "cd packages/tsc && npm run build && cd ../../",
        "build:module:vm": "cd packages/vm && npm run build && cd ../../",
        "build:module:wallet": "cd packages/wallet && npm run build && cd ../../",
        "build:node": "rm -rf ./lib && rm -rf ./types && rm -f tsconfig.tsbuildinfo && tsc",
        "test:pdm": "mocha --exit --require ts-node/register packages/pdm/test/*.spec.ts",
        "test:tableschema": "mocha --exit --require ts-node/register packages/pdm/test/table-schema.spec.ts",
        "test:graphql": "mocha --exit --require ts-node/register packages/pdm/test/graphql.spec.ts",
        "test": "node test/serve",
        "example:http": "node examples/app/lib/http",
        "example:worker": "node examples/app/lib/workerOnly",
        "serve:web": "node lib/web",
        "serve:worker": "node lib/worker",
        "serve:scheduler": "node lib/scheduler"
    }
}
